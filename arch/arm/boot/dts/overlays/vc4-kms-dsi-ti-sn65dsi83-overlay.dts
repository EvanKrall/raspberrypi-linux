/*
 * vc4-kms-dsi-sn65dsi8x-overlay.dts
 */

/dts-v1/;
/plugin/;
#include <dt-bindings/gpio/gpio.h>

/ {
	compatible = "brcm,bcm2835";

	/* PWM0 function */
	fragment@0 {
		target = <&gpio>;
		__overlay__ {
			pwm_pins: pwm_pins {
				brcm,pins = <12>;
				brcm,function = <4>; /* Alt1 */
			};
		};
	};

	fragment@1 {
		target = <&pwm>;
		frag1: __overlay__ {
			pinctrl-names = "default";
			pinctrl-0 = <&pwm_pins>;
			assigned-clock-rates = <100000000>;
			status = "okay";
		};
	};

	fragment@2 {
		target-path = "/";
		__overlay__ {
			vdd_panel: fixedregulator {
			    regulator-boot-on;
			    compatible = "regulator-fixed";
			    regulator-name = "lvds18";
			    regulator-min-microvolt = <1800000>;
			    regulator-max-microvolt = <1800000>;
			    gpio = <&gpio 26 0>;
			    startup-delay-us = <70000>;
			    enable-active-high;
			    vin-supply = <&vdd_3v3_reg>;
			};

			//#gpio-cells = <2>;
			/* Panel backlight through PWM0 on GPIO 12 */
			backlight_lvds: backlight {
				compatible = "pwm-backlight";
				pwms = <&pwm 0 5000000>; /* Period of 5000000ns means 200Hz */
				brightness-levels = <0  1000>;
				num-interpolated-steps = <1000>;
				default-brightness-level = <800>;
				enable-gpios = <&gpio 13 0>; /* Backlight enable... */
			};

			panel: panel {
				compatible = "lg,lp097x02-slq1";
				power-supply = <&vdd_panel>;
				backlight = <&backlight_lvds>;

				port {
					panel_in_lvds: endpoint {
						remote-endpoint = <&bridge_out>;
					};
				};
			};
		};
	};

	fragment@3 {
		target = <&i2c_csi_dsi>;
		__overlay__ {
			#gpio-cells = <2>;
			#address-cells = <1>;
			#size-cells = <0>;
			status = "okay";

			bridge@2d {
				compatible = "ti,sn65dsi83";
				reg = <0x2d>;
				enable-gpios = <&gpio 5 0>;

				ports {
					#address-cells = <1>;
					#size-cells = <0>;

					port@0 {
						reg = <0>;
						bridge_in: endpoint {
							remote-endpoint = <&dsi_out_port>;
							data-lanes = <0 1>;
						};
					};

					port@2 {
						reg = <2>;
						bridge_out: endpoint {
							remote-endpoint = <&panel_in_lvds>;
						};
					};
				};
			};
		};
	};

	fragment@4 {
		target = <&dsi1>;
		__overlay__ {
			#address-cells = <1>;
			#size-cells = <0>;
			status = "okay";
			port {
				dsi_out_port: endpoint {
					remote-endpoint = <&bridge_in>;
					data-lanes = <0 1>;
				};
			};
		};
	};

	fragment@5 {
		target = <&i2c0if>;
		__overlay__ {
			status = "okay";
		};
	};
		
	fragment@6 {
		target = <&i2c0mux>;
		__overlay__ {
			status = "okay";
		};
	};
};
